name: CI/CD Pipeline for Maven Java App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-maven-repo1:latest

      - name: Set up JDK for SonarQube
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run SonarQube Analysis with Maven
        run: mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
 # - name: Set up kubectl
     #   uses: azure/setup-kubectl@v3
     #   with:
     #     version: 'latest' # or specify a version
#
     # - name: Set up Kubeconfig
     #   run: |
     #       mkdir -p $HOME/.kube
     #       echo "${{ secrets.KUBECONFIG }}" >> $HOME/.kube/config

     # - name: Deploy to Kubernetes
     #   run: |
     #     kubectl apply --insecure-skip-tls-verify=true -f k8s-deployment.yaml --validate=false
     #     kubectl apply --insecure-skip-tls-verify=true -f service.yaml --validate=false